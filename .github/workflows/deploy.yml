name: Build & Deploy

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}   # owner/repo
  DOCKER_TAG: ${{ github.sha }}          # immutable version per commit

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write        # needed to push to GHCR
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG }}
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-push
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare compose (pin to this commit)
        run: |
          mkdir -p ci-artifacts
          sed "s#ghcr.io/OWNER/REPO:latest#${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ env.DOCKER_TAG }}#g" \
            docker-compose.yml > ci-artifacts/docker-compose.yml

      - name: Deploy over SSH
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT || 22 }}
          script_stop: true
          script: |
            set -e
            sudo mkdir -p /opt/node-service
            sudo chown $USER:$USER /opt/node-service

            # Write .env from repo Secrets (never stored in git)
            cat > /opt/node-service/.env << 'EOF'
            PORT=${{ secrets.APP_PORT }}
            SECRET_MESSAGE=${{ secrets.SECRET_MESSAGE }}
            USERNAME=${{ secrets.USERNAME }}
            PASSWORD=${{ secrets.PASSWORD }}
            EOF
            chmod 600 /opt/node-service/.env

            # Upload compose content for this SHA
            cat > /opt/node-service/docker-compose.yml << 'EOF'
            $(cat ci-artifacts/docker-compose.yml)
            EOF

            # Pull private image from GHCR
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ${{ env.REGISTRY }} -u ${{ github.actor }} --password-stdin

            cd /opt/node-service
            docker compose pull
            docker compose up -d
            docker image prune -af || true
